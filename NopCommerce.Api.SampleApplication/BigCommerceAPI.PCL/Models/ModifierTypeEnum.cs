/*
 * BigCommerceAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 04/27/2020
 */
using System;
using System.Linq;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using BigCommerceAPI.PCL;
using BigCommerceAPI.PCL.Utilities;

namespace BigCommerceAPI.PCL.Models
{
    [JsonConverter(typeof(StringValuedEnumConverter))]
    public enum ModifierTypeEnum
    {
        DATE, //TODO: Write general description for this method
        CHECKBOX, //TODO: Write general description for this method
        FILE, //TODO: Write general description for this method
        TEXT, //TODO: Write general description for this method
        MULTI_LINE_TEXT, //TODO: Write general description for this method
        NUMBERS_ONLY_TEXT, //TODO: Write general description for this method
        RADIO_BUTTONS, //TODO: Write general description for this method
        RECTANGLES, //TODO: Write general description for this method
        DROPDOWN, //TODO: Write general description for this method
        PRODUCT_LIST, //TODO: Write general description for this method
        PRODUCT_LIST_WITH_IMAGES, //TODO: Write general description for this method
        SWATCH, //TODO: Write general description for this method
    }

    /// <summary>
    /// Helper for the enum type ModifierTypeEnum
    /// </summary>
    public static class ModifierTypeEnumHelper
    {
        //string values corresponding the enum elements
        private static List<string> stringValues = new List<string> { "date", "checkbox", "file", "text", "multi_line_text", "numbers_only_text", "radio_buttons", "rectangles", "dropdown", "product_list", "product_list_with_images", "swatch" };

        /// <summary>
        /// Converts a ModifierTypeEnum value to a corresponding string value
        /// </summary>
        /// <param name="enumValue">The ModifierTypeEnum value to convert</param>
        /// <returns>The representative string value</returns>
        public static string ToValue(ModifierTypeEnum enumValue)
        {
            switch(enumValue)
            {
                //only valid enum elements can be used
                //this is necessary to avoid errors
                case ModifierTypeEnum.DATE:
                case ModifierTypeEnum.CHECKBOX:
                case ModifierTypeEnum.FILE:
                case ModifierTypeEnum.TEXT:
                case ModifierTypeEnum.MULTI_LINE_TEXT:
                case ModifierTypeEnum.NUMBERS_ONLY_TEXT:
                case ModifierTypeEnum.RADIO_BUTTONS:
                case ModifierTypeEnum.RECTANGLES:
                case ModifierTypeEnum.DROPDOWN:
                case ModifierTypeEnum.PRODUCT_LIST:
                case ModifierTypeEnum.PRODUCT_LIST_WITH_IMAGES:
                case ModifierTypeEnum.SWATCH:
                    return stringValues[(int)enumValue];

                //an invalid enum value was requested
                default:
                    return null;
            }
        }

        /// <summary>
        /// Convert a list of ModifierTypeEnum values to a list of strings
        /// </summary>
        /// <param name="enumValues">The list of ModifierTypeEnum values to convert</param>
        /// <returns>The list of representative string values</returns>
        public static List<string> ToValue(List<ModifierTypeEnum> enumValues)
        {
            if (null == enumValues)
                return null;

            return enumValues.Select(eVal => ToValue(eVal)).ToList();
        }

        /// <summary>
        /// Converts a string value into ModifierTypeEnum value
        /// </summary>
        /// <param name="value">The string value to parse</param>
        /// <returns>The parsed ModifierTypeEnum value</returns>
        public static ModifierTypeEnum ParseString(string value)
        {
            int index = stringValues.IndexOf(value);
            if(index < 0)
                throw new InvalidCastException(string.Format("Unable to cast value: {0} to type ModifierTypeEnum", value));

            return (ModifierTypeEnum) index;
        }
    }
} 