/*
 * BigCommerceAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 04/27/2020
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using BigCommerceAPI.PCL;
using BigCommerceAPI.PCL.Utilities;

namespace BigCommerceAPI.PCL.Models
{
    public class OptionValue : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private int? id;
        private bool? isDefault;
        private string label;
        private int? sortOrder;
        private object valueData;

        /// <summary>
        /// The unique numeric ID of the value; increments sequentially.
        /// </summary>
        [JsonProperty("id")]
        public int? Id 
        { 
            get 
            {
                return this.id; 
            } 
            set 
            {
                this.id = value;
                onPropertyChanged("Id");
            }
        }

        /// <summary>
        /// The flag for pre-selecting a value as the default on the storefront. This field is not supported for `swatch` options/modifiers.
        /// </summary>
        [JsonProperty("is_default")]
        public bool? IsDefault 
        { 
            get 
            {
                return this.isDefault; 
            } 
            set 
            {
                this.isDefault = value;
                onPropertyChanged("IsDefault");
            }
        }

        /// <summary>
        /// The text displayed to identify the value on the storefront.
        /// </summary>
        [JsonProperty("label")]
        public string Label 
        { 
            get 
            {
                return this.label; 
            } 
            set 
            {
                this.label = value;
                onPropertyChanged("Label");
            }
        }

        /// <summary>
        /// The order in which the value will be displayed on the product page. Lower values mean higher placement.
        /// </summary>
        [JsonProperty("sort_order")]
        public int? SortOrder 
        { 
            get 
            {
                return this.sortOrder; 
            } 
            set 
            {
                this.sortOrder = value;
                onPropertyChanged("SortOrder");
            }
        }

        /// <summary>
        /// Extra data describing the value, based on the value's associated type of option or modifier. A `swatch` type requires an array of colors, with up to three hexidecimal color keys. A `product_list` type requires a `product_id`. A `checkbox` type requires a boolean flag called `checked_value` to determine which value is considered to be the checked state.
        /// </summary>
        [JsonProperty("value_data")]
        public object ValueData 
        { 
            get 
            {
                return this.valueData; 
            } 
            set 
            {
                this.valueData = value;
                onPropertyChanged("ValueData");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 