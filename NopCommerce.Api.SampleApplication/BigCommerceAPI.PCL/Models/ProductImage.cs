/*
 * BigCommerceAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 04/27/2020
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using BigCommerceAPI.PCL;
using BigCommerceAPI.PCL.Utilities;

namespace BigCommerceAPI.PCL.Models
{
    public class ProductImage : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private string description;
        private int? id;
        private string imageFile;
        private bool? isThumbnail;
        private int? productId;
        private int? sortOrder;
        private string urlStandard;
        private string urlThumbnail;
        private string urlTiny;
        private string urlZoom;

        /// <summary>
        /// The description for the image.
        /// </summary>
        [JsonProperty("description")]
        public string Description 
        { 
            get 
            {
                return this.description; 
            } 
            set 
            {
                this.description = value;
                onPropertyChanged("Description");
            }
        }

        /// <summary>
        /// The unique numeric ID of the image, increments sequentially
        /// </summary>
        [JsonProperty("id")]
        public int? Id 
        { 
            get 
            {
                return this.id; 
            } 
            set 
            {
                this.id = value;
                onPropertyChanged("Id");
            }
        }

        /// <summary>
        /// The local path to the original image file uploaded to BigCommerce. Must be POSTed into as a multipart/form-data field.
        /// </summary>
        [JsonProperty("image_file")]
        public string ImageFile 
        { 
            get 
            {
                return this.imageFile; 
            } 
            set 
            {
                this.imageFile = value;
                onPropertyChanged("ImageFile");
            }
        }

        /// <summary>
        /// Flag for identifying if the image is used as the product's thumbnail.
        /// </summary>
        [JsonProperty("is_thumbnail")]
        public bool? IsThumbnail 
        { 
            get 
            {
                return this.isThumbnail; 
            } 
            set 
            {
                this.isThumbnail = value;
                onPropertyChanged("IsThumbnail");
            }
        }

        /// <summary>
        /// The unique numeric identifier for the product that the image is associated with.
        /// </summary>
        [JsonProperty("product_id")]
        public int? ProductId 
        { 
            get 
            {
                return this.productId; 
            } 
            set 
            {
                this.productId = value;
                onPropertyChanged("ProductId");
            }
        }

        /// <summary>
        /// The order in which the image will be displayed on the product page. When updating if the image is given a lower priority, all image with a sort_order the same or greater than the images new sort_order value will have their sort_order reordered
        /// </summary>
        [JsonProperty("sort_order")]
        public int? SortOrder 
        { 
            get 
            {
                return this.sortOrder; 
            } 
            set 
            {
                this.sortOrder = value;
                onPropertyChanged("SortOrder");
            }
        }

        /// <summary>
        /// Url The standard url for this image.
        /// </summary>
        [JsonProperty("url_standard")]
        public string UrlStandard 
        { 
            get 
            {
                return this.urlStandard; 
            } 
            set 
            {
                this.urlStandard = value;
                onPropertyChanged("UrlStandard");
            }
        }

        /// <summary>
        /// Url fThe thumbnail url for this image.
        /// </summary>
        [JsonProperty("url_thumbnail")]
        public string UrlThumbnail 
        { 
            get 
            {
                return this.urlThumbnail; 
            } 
            set 
            {
                this.urlThumbnail = value;
                onPropertyChanged("UrlThumbnail");
            }
        }

        /// <summary>
        /// The tiny url for this image.
        /// </summary>
        [JsonProperty("url_tiny")]
        public string UrlTiny 
        { 
            get 
            {
                return this.urlTiny; 
            } 
            set 
            {
                this.urlTiny = value;
                onPropertyChanged("UrlTiny");
            }
        }

        /// <summary>
        /// The zoom url for this image.
        /// </summary>
        [JsonProperty("url_zoom")]
        public string UrlZoom 
        { 
            get 
            {
                return this.urlZoom; 
            } 
            set 
            {
                this.urlZoom = value;
                onPropertyChanged("UrlZoom");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 